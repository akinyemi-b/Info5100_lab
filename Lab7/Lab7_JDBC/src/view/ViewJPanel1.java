/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Patient;
import utility.DatabaseConnector;

/**
 *
 * @author akiny
 */
public class ViewJPanel1 extends javax.swing.JPanel {
        ArrayList<Patient> patients;
        
        Patient selectedPatient;
       ImageIcon profilePicture;
       Patient p1;
    /**
     * Creates new form FormJPanel
     */
    public ViewJPanel1() {
        initComponents();
        populateTable();
        disableALL();
    }

    public ViewJPanel1(Patient p1){
        this.p1 = p1;
        initComponents();
         populateData();
         disableALL();
    }/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGender = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        TextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        TextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textFieldName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        patientJLabel = new javax.swing.JLabel();
        patientTypeJComboBox = new javax.swing.JComboBox<>();
        jRadioButtonMale = new javax.swing.JRadioButton();
        jRadioButtonFemale = new javax.swing.JRadioButton();
        jRadioButtonOthers = new javax.swing.JRadioButton();
        TextField4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientjTable1 = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        submitEditedRowButton = new javax.swing.JButton();
        jButtonSubmit = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel2.setText("Last Name");

        jLabel5.setText("Age");

        jLabel6.setText("Email");

        textFieldName.setEditable(false);

        jLabel3.setText("First Name");

        jLabel4.setText("Gender");

        patientJLabel.setText("Patient Type");

        patientTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Appointment", "Walk-in" }));
        patientTypeJComboBox.setSelectedIndex(-1);

        buttonGroupGender.add(jRadioButtonMale);
        jRadioButtonMale.setText("Male");
        jRadioButtonMale.setActionCommand("MALE");

        buttonGroupGender.add(jRadioButtonFemale);
        jRadioButtonFemale.setText("Female");
        jRadioButtonFemale.setActionCommand("FEMALE");

        buttonGroupGender.add(jRadioButtonOthers);
        jRadioButtonOthers.setText("Prefer Not To Say");
        jRadioButtonOthers.setActionCommand("Prefer Not To SAY");

        jLabel8.setText("Patient view details screen ");

        patientjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "First Name", "Last Name", "Age", "Email", "Gender Type", "Patient Type"
            }
        ));
        patientjTable1.setToolTipText("");
        jScrollPane1.setViewportView(patientjTable1);

        deleteButton.setText("Delete Row");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit Row");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        submitEditedRowButton.setText("Submit");
        submitEditedRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitEditedRowButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(55, 55, 55)))
                                    .addComponent(patientJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(patientTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jRadioButtonOthers)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jRadioButtonMale)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButtonFemale))
                                    .addComponent(TextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(11, 11, 11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(deleteButton)
                        .addGap(29, 29, 29)
                        .addComponent(editButton)
                        .addGap(48, 48, 48)
                        .addComponent(submitEditedRowButton)
                        .addContainerGap(83, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 63, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(TextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jRadioButtonMale)
                                .addComponent(jRadioButtonFemale)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonOthers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(TextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(patientTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(patientJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(deleteButton)
                                    .addComponent(editButton)
                                    .addComponent(submitEditedRowButton))
                                .addGap(183, 183, 183))))))
        );

        jButtonSubmit.setText("Submit");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSubmit)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonSubmit))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
        // TODO add your handling code here:
    try{
            String firstName = this.textFieldName.getText();
            String lastName = this.TextField2.getText();
            String Age = this.TextField3.getText();
            String Email = this.TextField4.getText();
            String gender = this.buttonGroupGender.getSelection().getActionCommand();
            //String patientType =this.patientTypeJComboBox.getSelectedItem().toString();
            //Date dateChooser =this.jDateChooser1.getDate();
            //String messagebox = this.messagebox.getText();
            String displayMessage;
            if(firstName.equals("")){
                displayMessage = "No First Name Entered";
            } else if (lastName.equals("")) {
                displayMessage = "No Last Name Entered";
            } else if (Age.equals("")) {
                displayMessage = "No Age Entered";
            } else{
                // Ensure the age is an integer
                try {
                    int ageInt = Integer.parseInt(Age);
                    displayMessage ="SUCCESSFULLY SAVED First Name: " + firstName +
                    " Last Name: " + lastName +
                    " Gender: " + gender +
                    " Age: " + Age +
                    " Email: " + Email;
        } catch (NumberFormatException nfe) {
                    displayMessage = "Invalid Age: Age must be a valid integer.";
                }
         }
            System.out.println(this.textFieldName.getText());
            System.out.println(this.buttonGroupGender.getSelection().getActionCommand());
            JOptionPane.showMessageDialog(this, displayMessage);
            JOptionPane.showMessageDialog(this, displayMessage,"Success",HEIGHT,this.profilePicture);
         }catch(NullPointerException ne){
            String errorMessage ="You must enter values in Gender.";
            JOptionPane.showMessageDialog(this, errorMessage);
        } catch(Exception e){
            System.out.println("Exception has occurred.");
            System.out.println(e);}
           this.jButtonSubmit.setVisible(false);
    }//GEN-LAST:event_jButtonSubmitActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex =this.patientjTable1.getSelectedRow();
        
        //validate if the user has selected some row
        try{
         this.selectedPatient =this.patients.get(selectedRowIndex);
         DatabaseConnector.deletePatient(selectedPatient);
         System.out.println("PATIENT DELETED SUCCESSFULLY.");
         populateTable();
          } catch (Exception e){
             System.out.println("Unable to delete the patient.");
       
               }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        enableAll();
        int selectedRowIndex = this.patientjTable1.getSelectedRow();
        //checkall the field to be edited
        this.selectedPatient = this.patients.get(selectedRowIndex);
          populateData();
    }//GEN-LAST:event_editButtonActionPerformed

    private void submitEditedRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitEditedRowButtonActionPerformed
            Patient updatedPatient = new Patient();
            updatedPatient.setFirstName(this.textFieldName.getText());
           updatedPatient.setLastName(this.TextField2.getText());
            updatedPatient.setAge(Integer.parseInt(this.TextField3.getText()));
            updatedPatient.setEmail(this.TextField4.getText());
           updatedPatient.setGender(this.buttonGroupGender.getSelection().getActionCommand());
            updatedPatient.setPatientType(this.patientTypeJComboBox.getSelectedItem().toString());
            System.out.println(updatedPatient.getGender());
           
           try{
            DatabaseConnector.updatePatient(selectedPatient, updatedPatient);
             System.out.println("The record has been updated");
           //REPOPULATE THE TABLE
            populateData();
           }catch (Exception e){
            System.out.println("Error in updating the values");
            System.out.println(e);
            //this.submitEditedRowButton.setVisible(true);
        }
// TODO add your handling code here:
        //Patient newPatient =new Patient();
       // newPatient.setFirstName(this.textFieldName.getText());
    }//GEN-LAST:event_submitEditedRowButtonActionPerformed
        
    public void populateTable(){
        this.patients =DatabaseConnector.getPatients();
        DefaultTableModel model =(DefaultTableModel) this.patientjTable1.getModel();
        model.setRowCount(0);
        for(Patient p1: patients){
            Object [] row = new Object[7];
            
            row [0] =p1.getId();
            row[1] =p1.getFirstName();
            row[2] =p1.getLastName();
            row[3] =p1.getAge();
            row[4] =p1.getEmail();
            row[5] =p1.getGender();
            row[6] =p1.getPatientType();
            
            model.addRow(row);
            
    }
    } 
      public void populateData(){
          this.textFieldName.setText(selectedPatient.getFirstName());
          this.TextField2.setText(selectedPatient.getLastName());
          String gender =selectedPatient.getGender();
          if(gender.equals("Male")){
             this.buttonGroupGender.setSelected( this.jRadioButtonMale.getModel(), true);
         }else if(gender.equals("Female")){
              this.buttonGroupGender.setSelected( this.jRadioButtonFemale.getModel(), true);
         }else {
             this.buttonGroupGender.setSelected( this.jRadioButtonOthers.getModel(), true);
         }
          this.patientTypeJComboBox.setSelectedItem(selectedPatient.getPatientType());
          //this.imgJLabel.setIcon(p1.getProfilePicture());
          this.TextField3.setText(String.valueOf(selectedPatient.getAge()));
          
          this.TextField4.setText(selectedPatient.getEmail());
           //this.messagebox.setText(p1.getMessageBox());
           //this.jDateChooser1.setDate(p1.getDateChooser());

   }
          public void enableAll(){
          this.jRadioButtonFemale.setEnabled(true);
          this.TextField2.setEnabled(true);
          this.TextField3.setEnabled(true);
          this.TextField4.setEnabled(true);
          this.jRadioButtonMale.setEnabled(true);
          this.jRadioButtonOthers.setEnabled(true);
          this.textFieldName.setEnabled(true);
          this.patientTypeJComboBox.setEnabled(true);
          
          this.jButtonSubmit.setVisible(true);
          }
          public void disableALL(){
          this.patientTypeJComboBox.setEnabled(false);
                  //tSelectedItem(p1.getPatientType());
          //this.imgJLabel.setIcon(p1.getProfilePicture());
          
          this.jRadioButtonFemale.setEnabled(false);
          this.TextField2.setEnabled(false);
          this.TextField3.setEnabled(false);
          this.TextField4.setEnabled(false);
          this.jRadioButtonMale.setEnabled(false);
          this.jRadioButtonOthers.setEnabled(false);
          this.textFieldName.setEnabled(false);
          this.patientTypeJComboBox.setEnabled(false);
          //this.messagebox.setEnabled(false);
          
          this.jButtonSubmit.setVisible(false);
      }
    // Variables declaration - do not modify                           
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextField2;
    private javax.swing.JTextField TextField3;
    private javax.swing.JTextField TextField4;
    private javax.swing.ButtonGroup buttonGroupGender;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonFemale;
    private javax.swing.JRadioButton jRadioButtonMale;
    private javax.swing.JRadioButton jRadioButtonOthers;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel patientJLabel;
    private javax.swing.JComboBox<String> patientTypeJComboBox;
    private javax.swing.JTable patientjTable1;
    private javax.swing.JButton submitEditedRowButton;
    private javax.swing.JTextField textFieldName;
    // End of variables declaration//GEN-END:variables
}
